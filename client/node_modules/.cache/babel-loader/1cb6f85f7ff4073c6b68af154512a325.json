{"ast":null,"code":"var _jsxFileName = \"/home/deion/ttp-stockportfolio/client/src/component/login.js\";\nimport React, { Component } from 'react';\nimport Form from './loginForm';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.needsAccount = event => {\n      this.setState({\n        noAccount: true\n      });\n    };\n\n    this.submit = async e => {\n      e.preventDefault();\n      const config = {\n        method: 'post',\n        url: 'http://localhost:8080/login',\n        data: {\n          email: this.state.email,\n          password: this.state.password\n        }\n      };\n\n      try {\n        let res = await axios(config);\n        this.setState({\n          authorized: true\n        });\n        console.log(res);\n      } catch (err) {\n        console.log(err);\n        this.setState({\n          error: \"Info not valid\"\n        });\n      }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      authorized: false,\n      error: \"\",\n      noAccount: false\n    };\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  render() {\n    if (this.state.authorized === true) {\n      return React.createElement(Link, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" \");\n    } else if (this.state.noAccount === true) {\n      return React.createElement(Link, {\n        to: \"/Register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" \");\n    } else {\n      return React.createElement(Form, {\n        submitHandler: this.submit,\n        handleInput: this.handleInput,\n        error: this.state.error,\n        register: this.needsAccount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default login;","map":{"version":3,"sources":["/home/deion/ttp-stockportfolio/client/src/component/login.js"],"names":["React","Component","Form","axios","Link","login","constructor","props","handleInput","event","setState","target","name","value","needsAccount","noAccount","submit","e","preventDefault","config","method","url","data","email","state","password","res","authorized","console","log","err","error","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAalBC,WAbkB,GAaJC,KAAD,IAAW;AACpB,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,OAAd;AAGH,KAjBiB;;AAAA,SAmBlBC,YAnBkB,GAmBHL,KAAD,IAAS;AACnB,WAAKC,QAAL,CAAc;AAACK,QAAAA,SAAS,EAAC;AAAX,OAAd;AACH,KArBiB;;AAAA,SAwBlBC,MAxBkB,GAwBT,MAAOC,CAAP,IAAW;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,MAAM,GAAE;AACVC,QAAAA,MAAM,EAAE,MADE;AAEVC,QAAAA,GAAG,EAAE,6BAFK;AAGVC,QAAAA,IAAI,EAAE;AACFC,UAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWD,KADf;AAEFE,UAAAA,QAAQ,EAAC,KAAKD,KAAL,CAAWC;AAFlB;AAHI,OAAd;;AASA,UAAG;AACC,YAAIC,GAAG,GAAC,MAAMvB,KAAK,CAACgB,MAAD,CAAnB;AACA,aAAKT,QAAL,CAAc;AAACiB,UAAAA,UAAU,EAAC;AAAZ,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACH,OAJD,CAIC,OAAMI,GAAN,EAAU;AACPF,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACA,aAAKpB,QAAL,CAAc;AAACqB,UAAAA,KAAK,EAAC;AAAP,SAAd;AACH;AACJ,KA3CiB;;AAEd,SAAKP,KAAL,GAAa;AACTD,MAAAA,KAAK,EAAC,EADG;AAETE,MAAAA,QAAQ,EAAC,EAFA;AAGTE,MAAAA,UAAU,EAAC,KAHF;AAITI,MAAAA,KAAK,EAAC,EAJG;AAKThB,MAAAA,SAAS,EAAC;AALD,KAAb;AAQA,SAAKP,WAAL,GAAkB,KAAKA,WAAL,CAAiBwB,IAAjB,CAAsB,IAAtB,CAAlB;AACH;;AAkCDC,EAAAA,MAAM,GAAE;AAEJ,QAAG,KAAKT,KAAL,CAAWG,UAAX,KAAwB,IAA3B,EAAgC;AAC5B,aACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH,KAJD,MAMK,IAAG,KAAKH,KAAL,CAAWT,SAAX,KAAuB,IAA1B,EAA+B;AAChC,aACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH,KAJI,MAKD;AACA,aACI,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKC,MAA1B;AAAkC,QAAA,WAAW,EAAE,KAAKR,WAApD;AAAiE,QAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWO,KAAnF;AAA0F,QAAA,QAAQ,EAAE,KAAKjB,YAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAhEwB;;AAmE7B,eAAeT,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Form from './loginForm';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom'\n\nclass login extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            email:\"\",\n            password:\"\",\n            authorized:false,\n            error:\"\",\n            noAccount:false\n        }\n\n        this.handleInput= this.handleInput.bind(this)\n    }\n\n    handleInput= (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    needsAccount= (event)=>{\n        this.setState({noAccount:true})\n    }\n\n\n    submit = async (e)=>{\n        e.preventDefault();\n        const config ={ \n            method: 'post',\n            url: 'http://localhost:8080/login',\n            data: {\n                email:this.state.email,\n                password:this.state.password,\n            }\n        }\n\n        try{\n            let res=await axios(config)\n            this.setState({authorized:true})\n            console.log(res)\n        }catch(err){\n            console.log(err)\n            this.setState({error:\"Info not valid\"})\n        }\n    }\n\n    render(){\n        \n        if(this.state.authorized===true){\n            return(\n                <Link to =\"/home\"> </Link>\n            )\n        }\n\n        else if(this.state.noAccount===true){\n            return(\n                <Link to =\"/Register\"> </Link>\n            )\n        }\n        else{\n            return(\n                <Form submitHandler={this.submit} handleInput={this.handleInput} error={this.state.error} register={this.needsAccount}/>\n            )\n        }\n    }\n}\n\nexport default login;"]},"metadata":{},"sourceType":"module"}