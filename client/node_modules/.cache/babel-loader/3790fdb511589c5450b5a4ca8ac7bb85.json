{"ast":null,"code":"var _jsxFileName = \"/home/deion/ttp-stockportfolio/client/src/component/Register.js\";\nimport React, { Component } from 'react';\nimport { validateForm } from './validate';\nimport '../styles/Register.css';\nimport axios from 'axios';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.registerUser = async () => {\n      const config = {\n        method: 'get',\n        url: 'http://localhost:8080/route'\n        /*\n        data: {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email:this.state.email,\n            password:this.state.password,\n            confirmPassword:this.state.confirmPassword\n        }*/\n\n      };\n      let res = await axios(config);\n      console.log(res);\n      return res;\n    };\n\n    this.submit = async e => {\n      e.preventDefault();\n      let err = new Map();\n      let invalid = false;\n      const keys = Object.keys(this.state);\n\n      for (const key of keys) {\n        if (key !== \"error\" || key !== \"count\") {\n          let result = await validateForm(key, this.state[key]);\n          err[key] = result;\n\n          if (result.error === true) {\n            invalid = true;\n          }\n        }\n      }\n\n      console.log(err);\n      this.setState({\n        error: err,\n        invalid\n      });\n\n      if (this.state.invalid === false) {\n        let result = this.registerUser();\n        alert(result);\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      invalid: false,\n      error: \"\"\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.registerUser = this.registerUser.bind(this);\n  }\n\n  render() {\n    if (this.state.invalid === true) {\n      console.log('error render');\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"First Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: this.state.error[\"firstName\"].error ? \"error\" : \"\",\n        name: \"firstName\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.error[\"firstName\"].error ? this.state.error[\"firstName\"].msg : \"\"), \"Last Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        className: this.state.error[\"lastName\"].error ? \"error\" : \"\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.error[\"lastName\"].error ? this.state.error[\"lastName\"].msg : \"\"), \"Email:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: this.state.error[\"email\"].error ? \"error\" : \"\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.error[\"email\"].error ? this.state.error[\"email\"].msg : \"\"), \"Password:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: this.state.error[\"password\"].error ? \"error\" : \"\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.state.error[\"password\"].error ? this.state.error[\"password\"].msg : \"\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        required: true,\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"First Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), \"Last Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), \"Email:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), \"Password:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        required: true,\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/deion/ttp-stockportfolio/client/src/component/Register.js"],"names":["React","Component","validateForm","axios","Register","constructor","props","handleInput","event","setState","target","name","value","registerUser","config","method","url","res","console","log","submit","e","preventDefault","err","Map","invalid","keys","Object","state","key","result","error","alert","firstName","lastName","email","password","confirmPassword","bind","render","msg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {validateForm} from './validate';\nimport '../styles/Register.css';\nimport axios from 'axios'\n\nclass Register extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n            invalid:false,\n            error:\"\"\n        }\n\n        this.handleInput= this.handleInput.bind(this)\n        this.registerUser = this.registerUser.bind(this)\n    }\n\n    handleInput= (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n\n     registerUser= async ()=>{\n\n        const config ={ \n            method: 'get',\n            url: 'http://localhost:8080/route',\n            /*\n            data: {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email:this.state.email,\n                password:this.state.password,\n                confirmPassword:this.state.confirmPassword\n            }*/\n        }\n    \n        let res = await axios(config)\n        console.log(res)\n        return res;\n    }\n\n    submit = async (e)=>{\n        e.preventDefault();\n        let err = new Map();\n        let invalid=false;\n        const keys = Object.keys(this.state)\n        for (const key of keys) {\n            if(key!==\"error\" || key!==\"count\"){\n                let result=await validateForm(key,this.state[key])\n                err[key]=result\n                if(result.error===true){\n                    invalid=true\n                }\n            }\n        }\n        console.log(err)\n        this.setState({error:err,invalid})\n        if(this.state.invalid===false){\n            let result=this.registerUser()\n            alert(result)\n        }\n\n    }\n\n\n    render(){\n        if(this.state.invalid===true){\n            console.log('error render')\n            return (\n                <form>\n                    <label>\n                    First Name:\n                    <br/>\n                    <input type=\"text\" className={this.state.error[\"firstName\"].error ? \"error\" : \"\"} name=\"firstName\" required onChange={this.handleInput}/>\n                    <br/>\n                    <div class=\"error\">{this.state.error[\"firstName\"].error ? this.state.error[\"firstName\"].msg : \"\"}</div>\n                    Last Name:\n                    <br/>\n                    <input type=\"text\" name=\"lastName\" className={this.state.error[\"lastName\"].error ? \"error\" : \"\"} required onChange={this.handleInput}/>\n                    <div class=\"error\">{this.state.error[\"lastName\"].error ? this.state.error[\"lastName\"].msg : \"\"}</div>\n                    Email:\n                    <br/>\n                    <input type=\"email\" name=\"email\" className={this.state.error[\"email\"].error ? \"error\" : \"\"}  required onChange={this.handleInput}/>\n                    <div class=\"error\">{this.state.error[\"email\"].error ? this.state.error[\"email\"].msg : \"\"}</div>\n                    Password:\n                    <br/>\n                    <input type=\"password\" name=\"password\" className={this.state.error[\"password\"].error ? \"error\" : \"\"} required onChange={this.handleInput}/>\n                    <div class=\"error\">{this.state.error[\"password\"].error ? this.state.error[\"password\"].msg : \"\"}</div>\n                    </label>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" required onClick={this.submit}/>\n                </form>\n            )\n        }\n        else{\n            return(\n                    <form>\n                    <label>\n                    First Name:\n                    <br/>\n                    <input type=\"text\" name=\"firstName\" required onChange={this.handleInput}/>\n                    <br/>\n                    Last Name:\n                    <br/>\n                    <input type=\"text\" name=\"lastName\" required onChange={this.handleInput}/>\n                    <br/>\n                    Email:\n                    <br/>\n                    <input type=\"email\" name=\"email\" required onChange={this.handleInput}/>\n                    <br/>\n                    Password:\n                    <br/>\n                    <input type=\"password\" name=\"password\" required onChange={this.handleInput}/>\n                    <br/>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" required onClick={this.submit}/>\n                    </form>\n            )\n\n    }\n}\n\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}