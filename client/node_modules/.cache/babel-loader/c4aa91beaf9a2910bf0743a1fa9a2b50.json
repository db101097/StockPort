{"ast":null,"code":"var _jsxFileName = \"/home/deion/ttp-stockportfolio/client/src/component/Register.js\";\nimport React, { Component } from 'react';\nimport { validateForm } from './validate';\nimport '../styles/Register.css';\nimport axios from 'axios';\nimport register from './register2.0';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.registerUser = async () => {\n      const config = {\n        method: 'post',\n        url: 'http://localhost:8080/register',\n        data: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword\n        }\n      };\n      let res = await axios(config);\n      console.log(res.data.msg);\n      return res;\n    };\n\n    this.submit = async e => {\n      e.preventDefault();\n      let err = new Map();\n      let invalid = false;\n      const keys = Object.keys(this.state);\n\n      for (const key of keys) {\n        if (key !== \"error\" || key !== \"count\") {\n          let result = await validateForm(key, this.state[key]);\n          err[key] = result;\n\n          if (result.error === true) {\n            invalid = true;\n          }\n        }\n      }\n\n      console.log(err);\n      this.setState({\n        error: err,\n        invalid\n      });\n\n      if (this.state.invalid === false) {\n        let result = await this.registerUser();\n        alert(result.data.msg);\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      invalid: false,\n      error: \"\"\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.registerUser = this.registerUser.bind(this);\n  }\n\n  render() {\n    const useStyles = makeStyles(theme => ({\n      '@global': {\n        body: {\n          backgroundColor: theme.palette.common.white\n        }\n      },\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n      },\n      form: {\n        width: '100%',\n        // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2)\n      }\n    }));\n    const classes = useStyles();\n\n    if (this.state.invalid === true) {\n      console.log('error render');\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"First Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: this.state.error[\"firstName\"].error ? \"error\" : \"\",\n        name: \"firstName\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.error[\"firstName\"].error ? this.state.error[\"firstName\"].msg : \"\"), \"Last Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        className: this.state.error[\"lastName\"].error ? \"error\" : \"\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.error[\"lastName\"].error ? this.state.error[\"lastName\"].msg : \"\"), \"Email:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        className: this.state.error[\"email\"].error ? \"error\" : \"\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.error[\"email\"].error ? this.state.error[\"email\"].msg : \"\"), \"Password:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: this.state.error[\"password\"].error ? \"error\" : \"\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.state.error[\"password\"].error ? this.state.error[\"password\"].msg : \"\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        required: true,\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(LockOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Sign up\"), React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        autoComplete: \"fname\",\n        name: \"firstName\",\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"firstName\",\n        label: \"First Name\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"lastName\",\n        label: \"Last Name\",\n        name: \"lastName\",\n        autoComplete: \"lname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Already have an account? Sign in\"))))));\n    }\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/deion/ttp-stockportfolio/client/src/component/Register.js"],"names":["React","Component","validateForm","axios","register","Register","constructor","props","handleInput","event","setState","target","name","value","registerUser","config","method","url","data","firstName","state","lastName","email","password","confirmPassword","res","console","log","msg","submit","e","preventDefault","err","Map","invalid","keys","Object","key","result","error","alert","bind","render","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","classes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {validateForm} from './validate';\nimport '../styles/Register.css';\nimport axios from 'axios'\nimport register from './register2.0'\n\nclass Register extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n            invalid:false,\n            error:\"\"\n        }\n\n        this.handleInput= this.handleInput.bind(this)\n        this.registerUser = this.registerUser.bind(this)\n    }\n\n\n    handleInput= (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n\n     registerUser= async ()=>{\n\n        const config ={ \n            method: 'post',\n            url: 'http://localhost:8080/register',\n            data: {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email:this.state.email,\n                password:this.state.password,\n                confirmPassword:this.state.confirmPassword\n            }\n        }\n    \n        let res = await axios(config)\n        console.log(res.data.msg)\n        return res;\n    }\n\n    submit = async (e)=>{\n        e.preventDefault();\n        let err = new Map();\n        let invalid=false;\n        const keys = Object.keys(this.state)\n        for (const key of keys) {\n            if(key!==\"error\" || key!==\"count\"){\n                let result=await validateForm(key,this.state[key])\n                err[key]=result\n                if(result.error===true){\n                    invalid=true\n                }\n            }\n        }\n        console.log(err)\n        this.setState({error:err,invalid})\n        if(this.state.invalid===false){\n            let result=await this.registerUser()\n            alert(result.data.msg)\n        }\n\n    }\n\n\n    render(){\n        const useStyles = makeStyles(theme => ({\n            '@global': {\n              body: {\n                backgroundColor: theme.palette.common.white,\n              },\n            },\n            paper: {\n              marginTop: theme.spacing(8),\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            },\n            avatar: {\n              margin: theme.spacing(1),\n              backgroundColor: theme.palette.secondary.main,\n            },\n            form: {\n              width: '100%', // Fix IE 11 issue.\n              marginTop: theme.spacing(3),\n            },\n            submit: {\n              margin: theme.spacing(3, 0, 2),\n            },\n          }));\n        const classes = useStyles();\n        if(this.state.invalid===true){\n            console.log('error render')\n            return (\n                <form>\n                    <label>\n                    First Name:\n                    <br/>\n                    <input type=\"text\" className={this.state.error[\"firstName\"].error ? \"error\" : \"\"} name=\"firstName\" required onChange={this.handleInput}/>\n                    <br/>\n                    <div class=\"error\">{this.state.error[\"firstName\"].error ? this.state.error[\"firstName\"].msg : \"\"}</div>\n                    Last Name:\n                    <br/>\n                    <input type=\"text\" name=\"lastName\" className={this.state.error[\"lastName\"].error ? \"error\" : \"\"} required onChange={this.handleInput}/>\n                    <div class=\"error\">{this.state.error[\"lastName\"].error ? this.state.error[\"lastName\"].msg : \"\"}</div>\n                    Email:\n                    <br/>\n                    <input type=\"email\" name=\"email\" className={this.state.error[\"email\"].error ? \"error\" : \"\"}  required onChange={this.handleInput}/>\n                    <div class=\"error\">{this.state.error[\"email\"].error ? this.state.error[\"email\"].msg : \"\"}</div>\n                    Password:\n                    <br/>\n                    <input type=\"password\" name=\"password\" className={this.state.error[\"password\"].error ? \"error\" : \"\"} required onChange={this.handleInput}/>\n                    <div class=\"error\">{this.state.error[\"password\"].error ? this.state.error[\"password\"].msg : \"\"}</div>\n                    </label>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" required onClick={this.submit}/>\n                </form>\n            )\n        }\n        else{\n            return(\n                <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                    </Typography>\n                    <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                        <TextField\n                            autoComplete=\"fname\"\n                            name=\"firstName\"\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"firstName\"\n                            label=\"First Name\"\n                            autoFocus\n                        />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"lastName\"\n                            label=\"Last Name\"\n                            name=\"lastName\"\n                            autoComplete=\"lname\"\n                        />\n                        </Grid>\n                        <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                        />\n                        </Grid>\n                        <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                        <Link href=\"#\" variant=\"body2\">\n                            Already have an account? Sign in\n                        </Link>\n                        </Grid>\n                    </Grid>\n                    </form>\n                </div>\n                </Container>\n            )\n\n    }\n}\n\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}