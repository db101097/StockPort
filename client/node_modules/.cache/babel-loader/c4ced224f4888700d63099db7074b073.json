{"ast":null,"code":"var _jsxFileName = \"/home/deion/ttp-stockportfolio/client/src/component/register/Register.js\";\nimport React, { Component } from 'react';\nimport { validateForm } from './validate';\nimport axios from 'axios';\nimport Form from './registerForm';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport Alert from './Alert';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.registerUser = async () => {\n      const config = {\n        method: 'post',\n        url: 'http://localhost:8080/register',\n        data: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          email: this.state.email,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword\n        }\n      };\n\n      try {\n        let res = await axios(config);\n        console.log(res.data.msg);\n        return res;\n      } catch (err) {\n        throw err;\n      }\n    };\n\n    this.submit = async e => {\n      e.preventDefault();\n      let err = new Map();\n      let invalid = false;\n      const keys = Object.keys(this.state);\n\n      for (const key of keys) {\n        if (key !== \"error\" || key !== \"count\") {\n          let result = await validateForm(key, this.state[key]);\n          err[key] = result;\n\n          if (result.error === true) {\n            invalid = true;\n          }\n        }\n      }\n\n      console.log(err); //this.setState({error:err,invalid})\n\n      if (invalid === false) {\n        try {\n          let result = await this.registerUser();\n          this.setState({\n            redirect: true\n          });\n        } catch (err) {\n          console.log(err);\n          this.setState({\n            failed: true\n          });\n        }\n      } else {\n        this.setState({\n          error: err,\n          invalid\n        });\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      invalid: false,\n      error: \"\",\n      redirect: false\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.registerUser = this.registerUser.bind(this);\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return React.createElement(Redirect, {\n        to: \"/Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \" \");\n    } else if (this.state.invalid === true) {\n      console.log('error render');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Form, {\n        submitHandler: this.submit,\n        handleInput: this.handleInput,\n        errors: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    } else {\n      console.log('Regular form');\n      return React.createElement(Form, {\n        submitHandler: this.submit,\n        handleInput: this.handleInput,\n        errors: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/deion/ttp-stockportfolio/client/src/component/register/Register.js"],"names":["React","Component","validateForm","axios","Form","Link","Redirect","Alert","Register","constructor","props","handleInput","event","setState","target","name","value","registerUser","config","method","url","data","firstName","state","lastName","email","password","confirmPassword","res","console","log","msg","err","submit","e","preventDefault","Map","invalid","keys","Object","key","result","error","redirect","failed","bind","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {validateForm} from './validate';\nimport axios from 'axios'\nimport Form from './registerForm'\nimport {Link} from 'react-router-dom'\nimport { Redirect } from 'react-router'\nimport Alert from './Alert'\n\nclass Register extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n            invalid:false,\n            error:\"\",\n            redirect:false\n        }\n\n        this.handleInput= this.handleInput.bind(this)\n        this.registerUser = this.registerUser.bind(this)\n    }\n\n\n    handleInput= (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n\n     registerUser= async ()=>{\n\n        const config ={ \n            method: 'post',\n            url: 'http://localhost:8080/register',\n            data: {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email:this.state.email,\n                password:this.state.password,\n                confirmPassword:this.state.confirmPassword\n            }\n        }\n        try{\n            let res = await axios(config)\n            console.log(res.data.msg)\n            return res;\n        }catch(err){\n            throw err\n        }\n    }\n\n    submit = async (e)=>{\n        e.preventDefault();\n        let err = new Map();\n        let invalid=false;\n        const keys = Object.keys(this.state)\n        for (const key of keys) {\n            if(key!==\"error\" || key!==\"count\"){\n                let result=await validateForm(key,this.state[key])\n                err[key]=result\n                if(result.error===true){\n                    invalid=true\n                }\n            }\n        }\n        console.log(err)\n        //this.setState({error:err,invalid})\n        if(invalid===false){\n            try{\n                let result=await this.registerUser()\n                this.setState({redirect:true})\n            }catch(err){\n                console.log(err)\n                this.setState({failed:true})\n            }\n        }\n        else{\n            this.setState({error:err,invalid})\n        }\n\n    }\n\n\n    render(){\n        if(this.state.redirect===true){\n            return (\n                <Redirect to =\"/Login\"> </Redirect>\n            )\n        }\n        else if(this.state.invalid===true){\n            console.log('error render')\n            return (\n                <div>\n                    <Form submitHandler={this.submit} handleInput={this.handleInput} errors={this.state.error}/>\n                </div>\n            )\n        }\n        else{\n            console.log('Regular form')\n            return(\n                <Form submitHandler={this.submit} handleInput={this.handleInput} errors={this.state.error}/>\n            )\n        }\n}\n\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}