{"ast":null,"code":"import _slicedToArray from \"/home/deion/ttp-stockportfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/deion/ttp-stockportfolio/client/src/component/transactions/transactionbase.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport List from './ex';\nimport Axios from 'axios';\nimport { array } from 'prop-types';\nimport ExpansionPanel from './expansion';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    height: '60vw'\n  }\n}));\n\nconst getData = async () => {\n  try {\n    const config = {\n      method: 'get',\n      url: 'http://localhost:8080/transaction/51'\n    };\n    let res = await Axios(config);\n    console.log(res);\n    return {\n      status: true,\n      data: res.data\n    };\n  } catch (err) {\n    return {\n      status: false,\n      error: 'Failed To Get Transactions'\n    };\n  }\n};\n\nconst generateList = async () => {\n  let transactions = await getData();\n\n  if (transactions.status !== true) {\n    return transactions.status;\n  } else {\n    for (let i = 0; i < transactions.data.length; i++) {\n      let all = new Array();\n      let t = transactions.data[i];\n      all.push(React.createElement(ExpansionPanel, {\n        panel: 'panel' + i,\n        ariaControl: 'panel' + i + 'bh-content',\n        ticker: t.ticker,\n        type: t.type,\n        total: t.total,\n        shares: t.shares,\n        cost: t.cost,\n        date: t.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n      return all;\n    }\n  }\n};\n\nexport default function PaperSheet() {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1]; //axios call to get all transactions\n\n\n  useEffect(() => {\n    if (list === false) {\n      let data = async () => {\n        let res = await generateList();\n        res.forEach(l => {\n          console.log(l);\n        });\n      };\n\n      setList(data);\n    }\n  });\n\n  if (list !== false) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Transactions\"), React.createElement(Typography, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Your Transactions\"), React.createElement(List, {\n      render: list,\n      panels: list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Transactions\"), React.createElement(Typography, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Your Transactions\"), React.createElement(List, {\n      render: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })));\n  }\n}","map":{"version":3,"sources":["/home/deion/ttp-stockportfolio/client/src/component/transactions/transactionbase.js"],"names":["React","useState","useEffect","makeStyles","Paper","Typography","List","Axios","array","ExpansionPanel","useStyles","theme","root","padding","spacing","height","getData","config","method","url","res","console","log","status","data","err","error","generateList","transactions","i","length","all","Array","t","push","ticker","type","total","shares","cost","date","PaperSheet","classes","list","setList","forEach","l"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect }from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport List from './ex'\nimport Axios from 'axios';\nimport { array } from 'prop-types';\nimport ExpansionPanel from './expansion'\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    height: '60vw'\n  },\n}));\n\n\nconst getData=async()=>{\n    try{\n        const config={\n            method: 'get',\n            url: 'http://localhost:8080/transaction/51',\n        }\n        let res=await Axios(config)\n        console.log(res)\n        return {\n          status:true,\n          data:res.data\n        }\n    }catch(err){\n        return {\n          status:false,\n          error:'Failed To Get Transactions'\n        }\n    } \n\n}\n\nconst generateList=async()=>{\n  let transactions=await getData()\n    if(transactions.status!==true){\n        return transactions.status\n    }\n    else{\n      for(let i=0;i<transactions.data.length;i++){\n        let all= new Array()\n        let t=transactions.data[i]\n        all.push(<ExpansionPanel \n                    panel={'panel'+i} \n                    ariaControl={'panel'+i+'bh-content'}\n                    ticker={t.ticker}\n                    type={t.type}\n                    total={t.total}\n                    shares={t.shares}\n                    cost={t.cost}\n                    date={t.date}   />)\n        return all;\n      }\n    }\n}\n\n\nexport default function PaperSheet() {\n  const classes = useStyles();  \n  const [list, setList] = useState(false);\n  //axios call to get all transactions\n\n  useEffect(() => {\n\n      if(list===false){\n        let data=async()=>{\n            let res=await generateList()\n            res.forEach((l)=>{\n              console.log(l)\n            })\n        }\n        setList(data)\n      }\n  });\n\n\n\n  if(list!==false){\n    return (\n      <div>\n        <Paper className={classes.root}>\n          <Typography variant=\"h5\" component=\"h3\">\n            Transactions\n          </Typography>\n          <Typography component=\"p\">\n            Your Transactions\n          </Typography>\n          <List render={list} panels={list}/>\n        </Paper>\n      </div>\n    );\n  }\n  else{\n    return (\n      <div>\n        <Paper className={classes.root}>\n          <Typography variant=\"h5\" component=\"h3\">\n            Transactions\n          </Typography>\n          <Typography component=\"p\">\n            Your Transactions\n          </Typography>\n          <List render={false}/>\n        </Paper>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}