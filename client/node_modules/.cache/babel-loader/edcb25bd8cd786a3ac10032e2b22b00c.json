{"ast":null,"code":"import _slicedToArray from \"/home/deion/ttp-stockportfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/deion/ttp-stockportfolio/client/src/component/portfolio/list.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default\n    }\n  }\n}))(TableRow);\n\nfunction createData(ticker, shares, total) {\n  return {\n    ticker,\n    shares,\n    total\n  };\n}\n\nconst rows = [];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  }\n}));\n\nasync function getStocks() {\n  try {\n    const config = {\n      method: 'get',\n      url: 'http://localhost:8080/stocks/51'\n    };\n    let res = await axios(config);\n    let stocks = res.data;\n    return stocks;\n  } catch (err) {\n    console.log(err);\n    return false;\n  }\n}\n\nasync function generateRows() {\n  try {\n    let stocks = await getStocks();\n    console.log('Stocks ', stocks);\n    let tickers = \"\";\n\n    for (let i = 0; i < stocks.length; i++) {\n      let t = stocks[i].ticker + ',';\n      tickers += t;\n      rows.push(createData(stocks[i].ticker, stocks[i].shares, stocks[i].total));\n    }\n\n    rows.forEach(row => {\n      console.log('Row ', row);\n    });\n    return rows;\n    const config = {\n      method: 'get',\n      url: 'https://api.iextrading.com/1.0/tops?symbols=' + tickers\n    };\n    let res = await axios(config);\n    let currData = res.data;\n    console.log('current data ', res);\n    return res;\n  } catch (err) {\n    console.log(err);\n    return false;\n  }\n}\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        row = _useState2[0],\n        setRow = _useState2[1];\n\n  useEffect(() => {\n    let data = async () => {\n      let res = await generateRows();\n      setRow(res);\n    };\n\n    data();\n  }, []);\n  console.log('This is rows ', rows);\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Ticker \"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Shares\"), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Total\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, rows.map(row => React.createElement(StyledTableRow, {\n    key: row.ticker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, row.ticker), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, row.shares), React.createElement(StyledTableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, row.total))))));\n}","map":{"version":3,"sources":["/home/deion/ttp-stockportfolio/client/src/component/portfolio/list.js"],"names":["React","useState","useEffect","withStyles","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","axios","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","background","default","createData","ticker","shares","total","rows","useStyles","width","marginTop","spacing","overflowX","table","minWidth","getStocks","config","method","url","res","stocks","data","err","console","log","generateRows","tickers","i","length","t","push","forEach","row","currData","CustomizedTables","classes","setRow","map"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios'\n\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nfunction createData(ticker,shares,total) {\n  return { ticker,shares,total };\n}\n\nconst rows = [\n];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n}));\n\nasync function getStocks(){\n    try{\n        const config ={ \n            method: 'get',\n            url: 'http://localhost:8080/stocks/51',\n        }\n        let res=await axios(config)\n        let stocks=res.data\n        return stocks\n    }catch(err){\n        console.log(err)\n        return false;\n    }\n}\n\nasync function generateRows(){\n    try{\n\n        let stocks= await getStocks()\n        console.log('Stocks ',stocks)\n        let tickers=\"\"\n        for(let i=0;i<stocks.length;i++){\n            let t=stocks[i].ticker+','\n            tickers+=t\n            rows.push(createData(stocks[i].ticker,stocks[i].shares,stocks[i].total))\n        }\n\n        rows.forEach(row=>{\n            console.log('Row ',row)\n        })\n        return rows\n        const config ={ \n            method: 'get',\n            url: 'https://api.iextrading.com/1.0/tops?symbols='+tickers\n        }\n        let res=await axios(config)\n        let currData=res.data\n        console.log('current data ',res)\n        return res\n    }catch(err){\n        console.log(err)\n        return false;\n    }\n}\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  const [row, setRow] = useState([]);\n  useEffect(() => {\n      let data=async()=>{\n          let res=await generateRows()  \n          setRow(res)\n      }\n      data()\n    },[]);\n    console.log('This is rows ',rows)\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Ticker </StyledTableCell>\n            <StyledTableCell align=\"right\">Shares</StyledTableCell>\n            <StyledTableCell align=\"right\">Total</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <StyledTableRow key={row.ticker}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.ticker}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.shares}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.total}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}