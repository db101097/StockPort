{"ast":null,"code":"var _jsxFileName = \"/home/deion/ttp-stockportfolio/client/src/component/Register.js\";\nimport React, { Component } from 'react';\nimport { validateForm } from './validate';\nimport '../styles/Register.css';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.submit = async e => {\n      e.preventDefault();\n      let err = new Map();\n      const keys = Object.keys(this.state);\n\n      for (const key of keys) {\n        //console.log(key,\"value: \",this.state[key])\n        if (key !== \"error\" || key !== \"count\") {\n          //console.log('valid',validateForm(key,this.state[key]))\n          let result = await validateForm(key, this.state[key]);\n          console.log(result);\n\n          if (result.error === true) {\n            this.setState({\n              invalid: true\n            });\n          }\n        }\n      }\n\n      this.setState({\n        error: err\n      });\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      invalid: false,\n      error: \"\"\n    };\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  render() {\n    if (this.state.invalid === true) {\n      console.log('error render');\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"First Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: this.state.error[\"firstName\"].error ? \"error\" : \"\",\n        name: \"firstName\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.error[\"firstName\"].error ? this.state.error[\"firstName\"].msg : \"\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \"Last Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.error[\"lastName\"].error ? this.state.error[\"lastName\"].msg : \"\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), \"Email:\", React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.error[\"email\"].error ? this.state.error[\"email\"].msg : \"\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"Password:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.error[\"password\"].error ? this.state.error[\"password\"].msg : \"\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \"Confirm Password:\", React.createElement(\"div\", {\n        class: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, this.state.error[\"confirmPassword\"].error ? this.state.error[\"confirmPassword\"].msg : \"\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        required: true,\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"First Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), \"Last Name:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \"Email:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), \"Password:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), \"Confirm Password:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        required: true,\n        onChange: this.handleInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        required: true,\n        onClick: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/deion/ttp-stockportfolio/client/src/component/Register.js"],"names":["React","Component","validateForm","Register","constructor","props","handleInput","event","setState","target","name","value","submit","e","preventDefault","err","Map","keys","Object","state","key","result","console","log","error","invalid","firstName","lastName","email","password","confirmPassword","bind","render","msg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {validateForm} from './validate';\nimport '../styles/Register.css';\n\nclass Register extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            firstName:\"\",\n            lastName:\"\",\n            email:\"\",\n            password:\"\",\n            confirmPassword:\"\",\n            invalid:false,\n            error:\"\"\n        }\n\n        this.handleInput= this.handleInput.bind(this)\n    }\n\n    handleInput= (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n\n    submit = async (e)=>{\n        e.preventDefault();\n        let err = new Map();\n        const keys = Object.keys(this.state)\n        for (const key of keys) {\n            //console.log(key,\"value: \",this.state[key])\n            if(key!==\"error\" || key!==\"count\"){\n                //console.log('valid',validateForm(key,this.state[key]))\n                let result=await validateForm(key,this.state[key])\n                console.log(result)\n                if(result.error===true){\n                    this.setState({invalid:true})\n                }\n            }\n        }\n        this.setState({error:err})\n    }\n\n\n    render(){\n        if(this.state.invalid===true){\n            console.log('error render')\n            return (\n                <form>\n                    <label>\n                    First Name:\n                    <br/>\n                    <input type=\"text\" className={this.state.error[\"firstName\"].error ? \"error\" : \"\"} name=\"firstName\" required onChange={this.handleInput}/>\n                    <br/>\n                    <div class=\"error\">{this.state.error[\"firstName\"].error ? this.state.error[\"firstName\"].msg : \"\"}</div>\n                    <br/>\n                    Last Name:\n                    <br/>\n                    <input type=\"text\" name=\"lastName\" required onChange={this.handleInput}/>\n                    <br/>\n                    <div class=\"error\">{this.state.error[\"lastName\"].error ? this.state.error[\"lastName\"].msg : \"\"}</div>\n                    <br/>\n                    Email:\n                    <div class=\"error\">{this.state.error[\"email\"].error ? this.state.error[\"email\"].msg : \"\"}</div>\n                    <br/>\n                    <input type=\"email\" name=\"email\" required onChange={this.handleInput}/>\n                    <br/>\n                    Password:\n                    <br/>\n                    <input type=\"password\" name=\"password\" required onChange={this.handleInput}/>\n                    <div class=\"error\">{this.state.error[\"password\"].error ? this.state.error[\"password\"].msg : \"\"}</div>\n                    <br/>\n                    Confirm Password:\n                    <div class=\"error\">{this.state.error[\"confirmPassword\"].error ? this.state.error[\"confirmPassword\"].msg : \"\"}</div>\n                    <br/>\n                    <input type=\"password\" name=\"confirmPassword\" required onChange={this.handleInput}/>\n                    </label>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" required onClick={this.submit}/>\n                </form>\n            )\n        }\n        else{\n            return(\n                    <form>\n                    <label>\n                    First Name:\n                    <br/>\n                    <input type=\"text\" name=\"firstName\" required onChange={this.handleInput}/>\n                    <br/>\n                    Last Name:\n                    <br/>\n                    <input type=\"text\" name=\"lastName\" required onChange={this.handleInput}/>\n                    <br/>\n                    Email:\n                    <br/>\n                    <input type=\"email\" name=\"email\" required onChange={this.handleInput}/>\n                    <br/>\n                    Password:\n                    <br/>\n                    <input type=\"password\" name=\"password\" required onChange={this.handleInput}/>\n                    <br/>\n                    Confirm Password:\n                    <br/>\n                    <input type=\"password\" name=\"confirmPassword\" required onChange={this.handleInput}/>\n                    </label>\n                    <br/>\n                    <input type=\"submit\" value=\"Submit\" required onClick={this.submit}/>\n                    </form>\n            )\n\n    }\n}\n\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}